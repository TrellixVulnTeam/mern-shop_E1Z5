{"ast":null,"code":"import{createStore,applyMiddleware,combineReducers}from'redux';import thunk from'redux-thunk';import{productsReducer,productDetailsReducer}from'./reducers/productsReducer';import{userRegReducer,userLoginReducer,userProfileReducer,userUpdateReducer}from'./reducers/userReducer';import{cartReducer}from'./reducers/cartReducer';import{composeWithDevTools}from'redux-devtools-extension';import{orderReducer,orderDetailReducer,orderPayReducer,myOrderReducer}from'./reducers/orderReducer';var userInfoFromStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null;var cartItemFromStorage=localStorage.getItem(\"cartItems\")?JSON.parse(localStorage.getItem(\"cartItems\")):[];var shippingAdressFromStorage=localStorage.getItem('shippingAdress')?JSON.parse(localStorage.getItem('shippingAdress')):{};var cartPaymentMethodFromStorage=localStorage.getItem('paymentMethod')?JSON.parse(localStorage.getItem('paymentMethod')):{};var reducer=combineReducers({productList:productsReducer,productDetails:productDetailsReducer,cart:cartReducer,userReg:userRegReducer,userLog:userLoginReducer,userProfile:userProfileReducer,userUpdate:userUpdateReducer,createOrder:orderReducer,orderDetails:orderDetailReducer,orderPay:orderPayReducer,myOrderList:myOrderReducer});var initialState={cart:{cartItems:cartItemFromStorage,shippingAdress:shippingAdressFromStorage,paymentMethod:cartPaymentMethodFromStorage},//userReg:{userReg:userRegFromStorage},\nuserLog:{userInfo:userInfoFromStorage}};var middleware=[thunk];var store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["C:/Users/grunge/Desktop/mern-shop/client/src/store.js"],"names":["createStore","applyMiddleware","combineReducers","thunk","productsReducer","productDetailsReducer","userRegReducer","userLoginReducer","userProfileReducer","userUpdateReducer","cartReducer","composeWithDevTools","orderReducer","orderDetailReducer","orderPayReducer","myOrderReducer","userInfoFromStorage","localStorage","getItem","JSON","parse","cartItemFromStorage","shippingAdressFromStorage","cartPaymentMethodFromStorage","reducer","productList","productDetails","cart","userReg","userLog","userProfile","userUpdate","createOrder","orderDetails","orderPay","myOrderList","initialState","cartItems","shippingAdress","paymentMethod","userInfo","middleware","store"],"mappings":"AAAA,OAAQA,WAAR,CAAoBC,eAApB,CAAoCC,eAApC,KAA0D,OAA1D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAAQC,eAAR,CAAyBC,qBAAzB,KAAqD,4BAArD,CACA,OAAQC,cAAR,CAAwBC,gBAAxB,CAA0CC,kBAA1C,CAA6DC,iBAA7D,KAAqF,wBAArF,CACA,OAAQC,WAAR,KAA0B,wBAA1B,CACA,OAAQC,mBAAR,KAAkC,0BAAlC,CACA,OAAQC,YAAR,CAAqBC,kBAArB,CAAwCC,eAAxC,CAAyDC,cAAzD,KAA8E,yBAA9E,CAGA,GAAMC,CAAAA,mBAAmB,CAACC,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjC,CAA8E,IAAxG,CAEA,GAAMG,CAAAA,mBAAmB,CAACJ,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlC,CAAgF,EAA1G,CAEA,GAAMI,CAAAA,yBAAyB,CAACL,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAwCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CAAxC,CAA2F,EAA3H,CACA,GAAMK,CAAAA,4BAA4B,CAACN,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CAAtC,CAAwF,EAA3H,CAEA,GAAMM,CAAAA,OAAO,CAACtB,eAAe,CAAC,CAC1BuB,WAAW,CAACrB,eADc,CAE1BsB,cAAc,CAACrB,qBAFW,CAG1BsB,IAAI,CAACjB,WAHqB,CAI1BkB,OAAO,CAACtB,cAJkB,CAK1BuB,OAAO,CAACtB,gBALkB,CAM1BuB,WAAW,CAACtB,kBANc,CAO1BuB,UAAU,CAACtB,iBAPe,CAQ1BuB,WAAW,CAACpB,YARc,CAS1BqB,YAAY,CAACpB,kBATa,CAU1BqB,QAAQ,CAACpB,eAViB,CAW1BqB,WAAW,CAACpB,cAXc,CAAD,CAA7B,CAaA,GAAMqB,CAAAA,YAAY,CAAC,CACfT,IAAI,CAAC,CACDU,SAAS,CAAChB,mBADT,CAEDiB,cAAc,CAAChB,yBAFd,CAGDiB,aAAa,CAAChB,4BAHb,CADU,CAMf;AACAM,OAAO,CAAC,CAACW,QAAQ,CAACxB,mBAAV,CAPO,CAAnB,CASA,GAAMyB,CAAAA,UAAU,CAAC,CAACtC,KAAD,CAAjB,CACA,GAAMuC,CAAAA,KAAK,CAAC1C,WAAW,CACnBwB,OADmB,CAEnBY,YAFmB,CAGnBzB,mBAAmB,CAACV,eAAe,MAAf,QAAmBwC,UAAnB,CAAD,CAHA,CAAvB,CAMA,cAAeC,CAAAA,KAAf","sourcesContent":["import {createStore,applyMiddleware,combineReducers} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {productsReducer, productDetailsReducer} from './reducers/productsReducer'\r\nimport {userRegReducer, userLoginReducer, userProfileReducer,userUpdateReducer} from './reducers/userReducer'\r\nimport {cartReducer} from './reducers/cartReducer'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {orderReducer,orderDetailReducer,orderPayReducer, myOrderReducer} from './reducers/orderReducer'\r\n\r\n\r\nconst userInfoFromStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null\r\n\r\nconst cartItemFromStorage=localStorage.getItem(\"cartItems\")?JSON.parse(localStorage.getItem(\"cartItems\")):[]\r\n\r\nconst shippingAdressFromStorage=localStorage.getItem('shippingAdress')? JSON.parse(localStorage.getItem('shippingAdress')):{}\r\nconst cartPaymentMethodFromStorage=localStorage.getItem('paymentMethod')?JSON.parse(localStorage.getItem('paymentMethod')):{}\r\n\r\nconst reducer=combineReducers({\r\n    productList:productsReducer,\r\n    productDetails:productDetailsReducer,\r\n    cart:cartReducer,\r\n    userReg:userRegReducer,\r\n    userLog:userLoginReducer,\r\n    userProfile:userProfileReducer,\r\n    userUpdate:userUpdateReducer,\r\n    createOrder:orderReducer,\r\n    orderDetails:orderDetailReducer,\r\n    orderPay:orderPayReducer,\r\n    myOrderList:myOrderReducer\r\n})\r\nconst initialState={\r\n    cart:{\r\n        cartItems:cartItemFromStorage,\r\n        shippingAdress:shippingAdressFromStorage,\r\n        paymentMethod:cartPaymentMethodFromStorage\r\n    },\r\n    //userReg:{userReg:userRegFromStorage},\r\n    userLog:{userInfo:userInfoFromStorage},\r\n}\r\nconst middleware=[thunk]\r\nconst store=createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n    )\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}