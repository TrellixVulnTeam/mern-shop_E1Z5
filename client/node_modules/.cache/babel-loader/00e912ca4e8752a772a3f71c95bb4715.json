{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grunge\\\\Desktop\\\\mycms\\\\frontend\\\\src\\\\pages\\\\Order.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Row, Col, Button, ListGroup, Image, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { getOrderDetails } from '../actions/orderAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Order = ({\n  match\n}) => {\n  _s();\n\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails; //const {shippingAdress}=order\n  // if(!loading){\n  //      //function for decimal\n  // const addDecimal=(num)=>{\n  //     return (Math.round(num * 100 / 100).toFixed(2))\n  // }\n  //  //calculation logic for the Order summary\n  // // cart.itemPrice=addDecimal(cart.cartItems.reduce((acc,item)=> acc + Number(item.price )* Number(item.qty),0)) \n  // }\n\n  useEffect(() => {\n    dispatch(getOrderDetails(orderId));\n  }, [dispatch, orderId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Shipping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: \" */}\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Order, \"4N5b8da2qk+uoUPHoJfETF9GjZE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Order;\nexport default Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["C:/Users/grunge/Desktop/mycms/frontend/src/pages/Order.jsx"],"names":["React","useEffect","Row","Col","Button","ListGroup","Image","Card","Link","getOrderDetails","useDispatch","useSelector","Order","match","orderId","params","id","dispatch","orderDetails","state","order","loading","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,MAAlB,EAA0BC,SAA1B,EAAqCC,KAArC,EAA4CC,IAA5C,QAAuD,iBAAvD;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AACvB,QAAMC,OAAO,GAACD,KAAK,CAACE,MAAN,CAAaC,EAA3B;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,YAAY,GAACP,WAAW,CAACQ,KAAK,IAAEA,KAAK,CAACD,YAAd,CAA9B;AACA,QAAM;AAACE,IAAAA,KAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAuBJ,YAA7B,CAJuB,CAKvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAjB,EAAAA,SAAS,CAAC,MAAI;AACVgB,IAAAA,QAAQ,CAACR,eAAe,CAACK,OAAD,CAAhB,CAAR;AACH,GAFQ,EAEP,CAACG,QAAD,EAAUH,OAAV,CAFO,CAAT;AAIA,sBACI;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,gCACA,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,OAAnB;AAAA,kCACU,QAAC,SAAD,CAAW,IAAX;AAAA,mCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADV,eAMM,QAAC,SAAD,CAAW,IAAX;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANN;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAYM,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADJ;AA2CH,CA9DD;;GAAMF,K;UAEeF,W,EACEC,W;;;KAHjBC,K;AAgEN,eAAeA,KAAf","sourcesContent":["import React,{useEffect} from 'react'\r\nimport {Row, Col, Button, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport { getOrderDetails } from '../actions/orderAction'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\n\r\n\r\nconst Order = ({match}) => {\r\n    const orderId=match.params.id\r\n    const dispatch = useDispatch()\r\n    const orderDetails=useSelector(state=>state.orderDetails)\r\n    const {order,loading, error}=orderDetails\r\n    //const {shippingAdress}=order\r\n    // if(!loading){\r\n    //      //function for decimal\r\n    // const addDecimal=(num)=>{\r\n    //     return (Math.round(num * 100 / 100).toFixed(2))\r\n    // }\r\n    //  //calculation logic for the Order summary\r\n    // // cart.itemPrice=addDecimal(cart.cartItems.reduce((acc,item)=> acc + Number(item.price )* Number(item.qty),0)) \r\n    \r\n    // }\r\n    useEffect(()=>{\r\n        dispatch(getOrderDetails(orderId))\r\n    },[dispatch,orderId])\r\n\r\n    return (\r\n        <>\r\n          <h2>Order</h2>  \r\n          <Row>\r\n              <Col md={8}>\r\n              <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                        <h2>Shipping</h2>\r\n                            {/* <p><strong>Adress</strong>\r\n                            {shippingAdress.adress}, {shippingAdress.city},  {shippingAdress.postalcode},  {shippingAdress.country}</p> */}\r\n                        </ListGroup.Item>            \r\n                    <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                            {/* <p><strong>{order.paymentMethod}</strong></p> */}\r\n                    </ListGroup.Item>\r\n                    </ListGroup>\r\n                    <ListGroup variant=\"flush\">\r\n                        {/* <ListGroup.Item><h2>Order Items</h2></ListGroup.Item>\r\n                        {/* {order.orderItems.length===0 \r\n                        ?(<h3>your Order list is empty!</h3>)\r\n                        :(<ListGroup.Item>\r\n                            {order.orderItems.map((item,index)=>(\r\n                          <ListGroup.Item key={index}>\r\n                              <Row>\r\n                                  <Col md={1}>\r\n                                      <Image src={item.image} alt={item.title} fluid/>\r\n                                  </Col>\r\n                                  <Col>\r\n                                  <Link to={`/products/product/${item.product}`}>{item.title}</Link>\r\n                                  </Col>\r\n                                  <Col md={4}>\r\n                                      {item.qty} X $ {item.price} = $ {item.qty * item.price}\r\n                                  </Col> */}\r\n                              {/* </Row> */}\r\n                          {/* </ListGroup.Item>  \r\n                        ))} */}\r\n                        {/* </ListGroup.Item>)} */} */}\r\n                        \r\n                    </ListGroup>\r\n              </Col>\r\n          </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Order\r\n"]},"metadata":{},"sourceType":"module"}