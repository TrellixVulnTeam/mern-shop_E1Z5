{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grunge\\\\Desktop\\\\mycms\\\\frontend\\\\src\\\\pages\\\\Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserProfile, userUpdateProfile } from '../actions/userAction';\nimport { myOrderList } from '../actions/orderAction';\nimport { Form, Row, Col, Button, Container } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loading from '../components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  history\n}) => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [input, setInput] = useState([]);\n  const dispatch = useDispatch();\n  const userProfile = useSelector(state => state.userProfile);\n  const {\n    loading,\n    error,\n    user\n  } = userProfile;\n  const userLog = useSelector(state => state.userLog);\n  const {\n    userInfo\n  } = userLog;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    success\n  } = userUpdate;\n  console.log(success);\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserProfile('profile'));\n        setMessage('profile update successful!');\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [history, user, userInfo, dispatch]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n    dispatch(userUpdateProfile({\n      id: user._id,\n      name,\n      email,\n      password\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            message: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 30\n          }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 32\n          }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"success\",\n            message: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"your name\",\n                name: input.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"email\",\n                name: input.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"password\",\n                name: input.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"confirmpassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Re-enter Password \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"confirm password\",\n                name: input.confirmPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 9,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"My Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Profile, \"J65JPLAwg2sXklTdAmP5IDTIDQc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/grunge/Desktop/mycms/frontend/src/pages/Profile.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","getUserProfile","userUpdateProfile","myOrderList","Form","Row","Col","Button","Container","Message","Loading","Profile","history","message","setMessage","input","setInput","dispatch","userProfile","state","loading","error","user","userLog","userInfo","userUpdate","success","console","log","push","name","setName","setEmail","email","handleSubmit","e","preventDefault","target","value","id","_id","password","confirmPassword"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getUserProfile, userUpdateProfile} from '../actions/userAction'\r\nimport {myOrderList} from '../actions/orderAction'\r\nimport {Form, Row, Col, Button,Container} from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loading from '../components/Loading'\r\n\r\n\r\nconst Profile = ({history}) => {\r\n\r\n    const [message, setMessage]=useState('')\r\n    const [input, setInput]=useState([])\r\n    \r\n    const dispatch=useDispatch()\r\n    const userProfile=useSelector((state)=>state.userProfile)\r\n    const{loading, error, user}=userProfile    \r\n    \r\n    const userLog=useSelector(state=>state.userLog)\r\n    const {userInfo}=userLog\r\n\r\n    const userUpdate=useSelector(state=>state.userUpdate)\r\n    const {success}=userUpdate\r\n    console.log(success)\r\n    \r\n    useEffect(()=>{\r\n    if(!userInfo){\r\n        history.push('/login')\r\n    }else{\r\n       if(!user.name){\r\n           dispatch(getUserProfile('profile'))\r\n           setMessage('profile update successful!')\r\n       }else{\r\n           setName(user.name)\r\n           setEmail(user.email)\r\n       }\r\n    }    \r\n},[history,user,userInfo,dispatch])\r\n\r\nconst handleSubmit= (e)=>{\r\n    e.preventDefault()\r\n    setInput({...input,[e.target.name]:e.target.value})\r\n    dispatch(userUpdateProfile({id:user._id,name, email, password}))\r\n    }\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={3}>\r\n                    \r\n                    <h2>Edit Profile</h2>\r\n                    {error&& <Message variant=\"danger\" message={error} />}\r\n                    {loading&& <Loading/>}\r\n                    {success&& <Message variant=\"success\" message={message}/>}\r\n            <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"name\" >\r\n                    <Form.Label>Name </Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\"\r\n                    placeholder=\"your name\"\r\n                    name={input.name}\r\n                    \r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\" >\r\n                    <Form.Label>Email </Form.Label>\r\n                    <Form.Control \r\n                    type=\"email\"\r\n                    placeholder=\"email\"\r\n                    name={input.email}\r\n                    \r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\" >\r\n                    <Form.Label>Password </Form.Label>\r\n                    <Form.Control \r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    name={input.password}\r\n                    \r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"confirmpassword\" >\r\n                    <Form.Label>Re-enter Password </Form.Label>\r\n                    <Form.Control \r\n                    type=\"password\"\r\n                    placeholder=\"confirm password\"\r\n                    name={input.confirmPassword}                    \r\n                    />                    \r\n                </Form.Group>\r\n                <Button type=\"submit\">Update</Button>\r\n            </Form>         \r\n        \r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <h2>My Orders</h2>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}