{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grunge\\\\Desktop\\\\mycms\\\\frontend\\\\src\\\\pages\\\\Order.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col, Button, ListGroup, Image, Card } from 'react-bootstrap';\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { Link } from 'react-router-dom';\nimport { getOrderDetails, payOrder } from '../actions/orderAction';\nimport { ORDER_PAY_RESET } from '../constants/orderConstant';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Order = ({\n  match\n}) => {\n  _s();\n\n  const [sdkReady, setSdkReady] = useState(false);\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successPay\n  } = orderPay;\n  useEffect(() => {\n    const addPaypalScript = async () => {\n      const {\n        data: clientId\n      } = await axios.get('/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}\">`;\n      script.async = true;\n\n      script.onload = () => {\n        setSdkReady(true);\n      };\n\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay) {\n      dispatch(getOrderDetails(orderId));\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n    } else {\n      if (!window.paypal) {\n        addPaypalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId]);\n\n  const handlePaymentSuccess = PaymentResult => {\n    console.log(PaymentResult);\n    dispatch(payOrder(orderId, PaymentResult));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Shipping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: order.paymentMethod\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Order Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), order.orderItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"your Order list is empty!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: order.orderItems.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: 1,\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    src: item.image,\n                    alt: item.title,\n                    fluid: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 39\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/products/product/${item.product}`,\n                    children: item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 31\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 27\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(PayPalButton, {\n            amount: order.totalPrice,\n            onSuccess: handlePaymentSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Order, \"1JfT2sP9dmRfJuspJwy5IBqpW7g=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Order;\nexport default Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["C:/Users/grunge/Desktop/mycms/frontend/src/pages/Order.jsx"],"names":["React","useEffect","useState","Row","Col","Button","ListGroup","Image","Card","PayPalButton","Link","getOrderDetails","payOrder","ORDER_PAY_RESET","useDispatch","useSelector","axios","Order","match","sdkReady","setSdkReady","orderId","params","id","dispatch","orderDetails","state","order","loading","error","orderPay","loadingPay","success","successPay","addPaypalScript","data","clientId","get","script","document","createElement","type","src","async","onload","body","appendChild","window","paypal","handlePaymentSuccess","PaymentResult","console","log","paymentMethod","orderItems","length","map","item","index","image","title","product","totalPrice"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport {Row, Col, Button, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport { PayPalButton } from \"react-paypal-button-v2\"\r\nimport {Link} from 'react-router-dom'\r\nimport { getOrderDetails, payOrder } from '../actions/orderAction'\r\nimport {ORDER_PAY_RESET} from '../constants/orderConstant'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\n\r\n\r\nconst Order = ({match}) => {\r\n    const [sdkReady, setSdkReady]=useState(false)\r\n    const orderId=match.params.id\r\n    const dispatch = useDispatch()\r\n    const orderDetails=useSelector(state=>state.orderDetails)\r\n    const {order,loading, error}=orderDetails\r\n    const orderPay=useSelector(state=>state.orderPay)\r\n    const {loading:loadingPay, success:successPay}=orderPay\r\n    \r\n    \r\n    useEffect(()=>{\r\n        const addPaypalScript= async ()=>{\r\n            const {data:clientId}= await axios.get('/config/paypal')\r\n            const script=document.createElement('script')\r\n            script.type='text/javascript'\r\n            script.src=`https://www.paypal.com/sdk/js?client-id=${clientId}\">`\r\n            script.async=true;\r\n            script.onload=()=>{\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n        if(!order||successPay){\r\n            dispatch(getOrderDetails(orderId))\r\n            dispatch({type:ORDER_PAY_RESET})\r\n        }else{\r\n            if(!window.paypal){\r\n                addPaypalScript()\r\n            }else{\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    },[dispatch,orderId])\r\n\r\n    const handlePaymentSuccess=(PaymentResult)=>{\r\n        console.log(PaymentResult)\r\n        dispatch(payOrder(orderId, PaymentResult))\r\n\r\n    }\r\n    \r\n    return (\r\n        <>\r\n          <h2>Order</h2>  \r\n          <Row>\r\n              <Col md={8}>\r\n              <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <h2>Shipping</h2>\r\n                            {/* <p><strong>Adress</strong>\r\n                            {order.shippingAdress.adress}, {order.shippingAdress.city},  {order.shippingAdress.postalcode},  {order.shippingAdress.country}</p> */}\r\n                    </ListGroup.Item>            \r\n                    <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                            <p><strong>{order.paymentMethod}</strong></p>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item><h2>Order Items</h2></ListGroup.Item>\r\n                         {order.orderItems.length===0 \r\n                        ?(<h3>your Order list is empty!</h3>)\r\n                        :(<ListGroup.Item>\r\n                            {order.orderItems.map((item,index)=>(\r\n                          <ListGroup.Item key={index}>\r\n                              <Row>\r\n                                  <Col md={1}>\r\n                                      <Image src={item.image} alt={item.title} fluid/>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <Link to={`/products/product/${item.product}`}>{item.title}</Link>\r\n                                  </Col>                                 \r\n                                </Row>\r\n                            </ListGroup.Item>  \r\n                        ))}\r\n                        </ListGroup.Item>)}\r\n                        \r\n                    </ListGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n                <ListGroup.Item>\r\n                    <PayPalButton \r\n                        amount={order.totalPrice}\r\n                        onSuccess={handlePaymentSuccess}\r\n                        />\r\n                </ListGroup.Item> \r\n                </Col>\r\n          </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Order\r\n"]},"metadata":{},"sourceType":"module"}