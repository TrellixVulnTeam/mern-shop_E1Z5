{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { productsReducer, productDetailsReducer } from './reducers/productsReducer';\nimport { userRegReducer } from './reducers/userReducer';\nimport { userLogReducer } from './reducers/userReducer';\nimport { cartReducer } from './reducers/cartReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst userRegFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst cartItemFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst reducer = combineReducers({\n  productList: productsReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userReg: userRegReducer,\n  userLog: userLogReducer\n});\nconst initialState = {\n  cart: {\n    cartItems: cartItemFromStorage\n  },\n  userReg: {\n    userReg: userRegFromStorage\n  },\n  userLog: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/grunge/Desktop/mycms/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","productsReducer","productDetailsReducer","userRegReducer","userLogReducer","cartReducer","composeWithDevTools","userInfoFromStorage","localStorage","getItem","JSON","parse","userRegFromStorage","cartItemFromStorage","reducer","productList","productDetails","cart","userReg","userLog","initialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,eAApC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,eAAR,EAAyBC,qBAAzB,QAAqD,4BAArD;AACA,SAAQC,cAAR,QAA6B,wBAA7B;AACA,SAAQC,cAAR,QAA6B,wBAA7B;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,MAAMC,mBAAmB,GAACC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAiCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjC,GAA8E,IAAxG;AACA,MAAMG,kBAAkB,GAACJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAiCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjC,GAA8E,IAAvG;AACA,MAAMI,mBAAmB,GAACL,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAkCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlC,GAAgF,EAA1G;AACA,MAAMK,OAAO,GAAChB,eAAe,CAAC;AAC1BiB,EAAAA,WAAW,EAACd,eADc;AAE1Be,EAAAA,cAAc,EAACd,qBAFW;AAG1Be,EAAAA,IAAI,EAACZ,WAHqB;AAI1Ba,EAAAA,OAAO,EAACf,cAJkB;AAK1BgB,EAAAA,OAAO,EAACf;AALkB,CAAD,CAA7B;AAOA,MAAMgB,YAAY,GAAC;AACfH,EAAAA,IAAI,EAAC;AAACI,IAAAA,SAAS,EAACR;AAAX,GADU;AAEfK,EAAAA,OAAO,EAAC;AAACA,IAAAA,OAAO,EAACN;AAAT,GAFO;AAGfO,EAAAA,OAAO,EAAC;AAACG,IAAAA,QAAQ,EAACf;AAAV;AAHO,CAAnB;AAKA,MAAMgB,UAAU,GAAC,CAACvB,KAAD,CAAjB;AACA,MAAMwB,KAAK,GAAC3B,WAAW,CACnBiB,OADmB,EAEnBM,YAFmB,EAGnBd,mBAAmB,CAACP,eAAe,CAAC,GAAGwB,UAAJ,CAAhB,CAHA,CAAvB;AAMA,eAAeC,KAAf","sourcesContent":["import {createStore,combineReducers,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {productsReducer, productDetailsReducer} from './reducers/productsReducer'\r\nimport {userRegReducer} from './reducers/userReducer'\r\nimport {userLogReducer} from './reducers/userReducer'\r\nimport {cartReducer} from './reducers/cartReducer'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nconst userInfoFromStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null\r\nconst userRegFromStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null\r\nconst cartItemFromStorage=localStorage.getItem(\"cartItems\")?JSON.parse(localStorage.getItem(\"cartItems\")):[]\r\nconst reducer=combineReducers({\r\n    productList:productsReducer,\r\n    productDetails:productDetailsReducer,\r\n    cart:cartReducer,\r\n    userReg:userRegReducer,\r\n    userLog:userLogReducer\r\n})\r\nconst initialState={\r\n    cart:{cartItems:cartItemFromStorage},\r\n    userReg:{userReg:userRegFromStorage},\r\n    userLog:{userInfo:userInfoFromStorage},\r\n}\r\nconst middleware=[thunk]\r\nconst store=createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n    )\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}