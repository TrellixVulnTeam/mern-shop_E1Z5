{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOG_REQUEST, USER_LOG_SUCCESS, USER_LOG_FAILURE, USER_LOG_LOGOUT, USER_REG_REQUEST, USER_REG_SUCCESS, USER_REG_FAILURE, USER_PROFILE_REQUEST, USER_PROFILE_SUCCESS, USER_PROFILE_FAILURE, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAILURE } from '../constants/userConstant';\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REG_REQUEST\n    });\n    const {\n      data\n    } = await axios.post('users/create', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REG_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOG_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REG_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOG_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOG_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOG_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserProfile = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_PROFILE_REQUEST\n    });\n    const {\n      userLog: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/users/profile/`, config);\n    dispatch({\n      type: USER_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_PROFILE_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOG_LOGOUT\n  });\n};\nexport const userUpdateProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userUpdate: {\n        user\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put('/users/profile', user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/grunge/Desktop/mycms/frontend/src/actions/userAction.js"],"names":["axios","USER_LOG_REQUEST","USER_LOG_SUCCESS","USER_LOG_FAILURE","USER_LOG_LOGOUT","USER_REG_REQUEST","USER_REG_SUCCESS","USER_REG_FAILURE","USER_PROFILE_REQUEST","USER_PROFILE_SUCCESS","USER_PROFILE_FAILURE","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAILURE","register","name","email","password","dispatch","type","data","post","payload","error","response","message","login","config","headers","localStorage","setItem","JSON","stringify","getUserProfile","id","getState","userLog","userInfo","Authorization","token","get","logout","removeItem","userUpdateProfile","user","userUpdate","put"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {USER_LOG_REQUEST,\r\n        USER_LOG_SUCCESS,\r\n        USER_LOG_FAILURE,\r\n        USER_LOG_LOGOUT,\r\n        USER_REG_REQUEST,\r\n        USER_REG_SUCCESS,\r\n        USER_REG_FAILURE,\r\n        USER_PROFILE_REQUEST,\r\n        USER_PROFILE_SUCCESS,\r\n        USER_PROFILE_FAILURE,\r\n        USER_UPDATE_REQUEST,\r\n        USER_UPDATE_SUCCESS,\r\n        USER_UPDATE_FAILURE\r\n} from '../constants/userConstant'\r\n\r\nexport const register=(name, email, password)=> async (dispatch)=>{\r\n    try {\r\n        dispatch({type:USER_REG_REQUEST})\r\n        const {data}=await axios.post('users/create',{name, email, password})\r\n\r\n        dispatch({\r\n            type:USER_REG_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        dispatch({\r\n            type:USER_LOG_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_REG_FAILURE,\r\n            payload:error.response && error.response.data.message\r\n            ?error.response.data.message\r\n            :error.message\r\n        }) \r\n    }\r\n}\r\n\r\nexport const login=(email, password)=> async(dispatch)=>{\r\n    try {\r\n        dispatch({type:USER_LOG_REQUEST})\r\n        const config={headers:{'Content-Type':'application/json'}}\r\n        const {data}= await axios.post('/users/login',{email, password},config)\r\n        \r\n        dispatch({\r\n            type:USER_LOG_SUCCESS,\r\n            payload:data\r\n        })\r\n    localStorage.setItem('userInfo',JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_LOG_FAILURE,\r\n            payload:error.response && error.response.data.message\r\n            ?error.response.data.message\r\n            :error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserProfile=(id)=> async (dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:USER_PROFILE_REQUEST\r\n        })\r\n        const {userLog:{userInfo}}=getState()\r\n        const config= {headers:{\r\n        'Content-Type':'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`}}\r\n        const {data}= await axios.get(`/users/profile/`, config)\r\n\r\n        dispatch({\r\n            type:USER_PROFILE_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_PROFILE_FAILURE,\r\n            payload:error.response && error.response.data.message\r\n            ?error.response.data.message\r\n            :error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout=()=>dispatch=>{\r\n    localStorage.removeItem(\"userInfo\")\r\n    dispatch({type:USER_LOG_LOGOUT})\r\n}\r\n\r\nexport const userUpdateProfile=(user)=> async (dispatch, getState)=>{\r\n    try {\r\n        dispatch({type:USER_UPDATE_REQUEST})\r\n        const {userUpdate:{user}}=getState()\r\n        const config= {headers:{\r\n            'Content-Type': 'application/json',\r\n            Authorization:`Bearer ${userInfo.token}`\r\n        }}\r\n        const {data}= await axios.put('/users/profile', user, config)\r\n        \r\n        dispatch({\r\n            type:USER_UPDATE_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_UPDATE_FAILURE,\r\n            payload:error.response && error.response.data.message\r\n            ?error.response.data.message\r\n            :error.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}