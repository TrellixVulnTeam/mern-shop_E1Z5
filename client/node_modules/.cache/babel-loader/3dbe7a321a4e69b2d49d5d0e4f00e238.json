{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_REQUEST, ORDER_SUCCESS, ORDER_FAILURE, ORDER_DETAIL_REQUEST, ORDER_DETAIL_SUCCESS, ORDER_DETAIL_FAILURE, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAILURE } from '../constants/orderConstant';\nexport const createOrders = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_REQUEST\n    });\n    const {\n      userLog: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('/order', order, config);\n    dispatch({\n      type: ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAIL_REQUEST\n    });\n    const {\n      userLog: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/order/${id}`, config);\n    dispatch({\n      type: ORDER_DETAIL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAIL_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLog: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/order/${orderId}/pay`, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/grunge/Desktop/mycms/frontend/src/actions/orderAction.js"],"names":["axios","ORDER_REQUEST","ORDER_SUCCESS","ORDER_FAILURE","ORDER_DETAIL_REQUEST","ORDER_DETAIL_SUCCESS","ORDER_DETAIL_FAILURE","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAILURE","createOrders","order","dispatch","getState","type","userLog","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {\r\n    ORDER_REQUEST,\r\n    ORDER_SUCCESS,\r\n    ORDER_FAILURE,\r\n    ORDER_DETAIL_REQUEST,\r\n    ORDER_DETAIL_SUCCESS,\r\n    ORDER_DETAIL_FAILURE,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAILURE,\r\n    } from '../constants/orderConstant'\r\n\r\nexport const createOrders=(order)=>async (dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:ORDER_REQUEST\r\n        })\r\n        const {userLog:{userInfo}}=getState()\r\n        const config= {headers:{\r\n            'Content-Type': 'application/json',\r\n            Authorization:`Bearer ${userInfo.token}`\r\n        }}\r\n        const {data}= await axios.post('/order',order, config)\r\n        dispatch({\r\n            type:ORDER_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_FAILURE,\r\n            payload:error.response && error.response.data.message\r\n            ?error.response.data.message\r\n            :error.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const getOrderDetails=(id)=>async (dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:ORDER_DETAIL_REQUEST,\r\n        })\r\n        const {userLog:{userInfo}}=getState()\r\n        const config={\r\n            headers:{\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data}= await axios.get(`/order/${id}`,config)\r\n\r\n        dispatch({\r\n            type:ORDER_DETAIL_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_DETAIL_FAILURE,\r\n            payload:error.response && error.response.data.message\r\n            ?error.response.data.message\r\n            :error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder=(orderId, paymentResult)=>async (dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:ORDER_PAY_REQUEST,\r\n        })\r\n        const {userLog:{userInfo}}=getState()\r\n        const config={\r\n            headers:{\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data}= await axios.put(`/order/${orderId}/pay`,config)\r\n\r\n        dispatch({\r\n            type:ORDER_PAY_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_PAY_FAILURE,\r\n            payload:error.response && error.response.data.message\r\n            ?error.response.data.message\r\n            :error.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}